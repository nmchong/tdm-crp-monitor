name: CRP Monitor

# 1) Give the GITHUB_TOKEN write access so we can push back.
permissions:
  contents: write

on:
  schedule:
    - cron: '0 */2 * * *'   # every hour
  workflow_dispatch:      # allow manual run

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      # 2) Checkout and persist the token for pushes
      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # ensures the write-token is available

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run monitor script
        env:
          SMTP_SERVER:    ${{ secrets.SMTP_SERVER }}
          SMTP_PORT:      ${{ secrets.SMTP_PORT }}
          EMAIL_ADDRESS:  ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_TO:       ${{ secrets.EMAIL_TO }}
        run: python monitor_crp.py

      - name: Commit CSV if updated
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage the CSV (new or changed)
          git add seen_projects.csv

          # If there's anything staged, commit & push
          if ! git diff --cached --quiet; then
            git commit -m "update seen_projects.csv"
            git push
          else
            echo "No changes to commit"
          fi
